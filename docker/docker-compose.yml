services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env    
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW_UID: ${AIRFLOW_UID}
      STG_METEOMATICS_USERNAME: ${STG_METEOMATICS_USERNAME}
      STG_METEOMATICS_PASSWORD: ${STG_METEOMATICS_PASSWORD}
    ports:
      - "8080:8080"
    volumes:
      - ./keys:/keys:ro
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
    command: webserver

  airflow-scheduler:
    build:
      context: ./airflow
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW_UID: ${AIRFLOW_UID}
      STG_METEOMATICS_USERNAME: ${STG_METEOMATICS_USERNAME}
      STG_METEOMATICS_PASSWORD: ${STG_METEOMATICS_PASSWORD}      
    volumes:
      - ./keys:/keys:ro
      - ../airflow/dags:/opt/airflow/dags
      - ../airflow/logs:/opt/airflow/logs
    command: scheduler

  airflow-init:
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.9.1}
    depends_on:
      - postgres
    env_file:
      - .env      
    environment:
      AIRFLOW__CORE__FERNET_KEY: ${AIRFLOW__CORE__FERNET_KEY}
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW_UID: ${AIRFLOW_UID}
      STG_METEOMATICS_USERNAME: ${STG_METEOMATICS_USERNAME}
      STG_METEOMATICS_PASSWORD: ${STG_METEOMATICS_PASSWORD}      
    entrypoint: /bin/bash
    command:
      - -c
      - |
        echo "Initializing Airflow database...";
        airflow db migrate;
        echo "Creating admin user (if not exists)...";
        airflow users create \
          --username admin \
          --password admin \
          --firstname Admin \
          --lastname User \
          --role Admin \
          --email admin@example.com || true;
    user: "${AIRFLOW_UID}:0"
    restart: on-failure

volumes:
  postgres-db-volume:
